import Head from 'next/head'
import Image from 'next/image'
import Link from "next/link";

import styles from '../styles/Home.module.css'
import { useRouter } from "next/router";
import LanguageForm from './components/LanguageForm/LanguageForm';
import { GetStaticPropsContext } from 'next';


export const newsContent = {
  "en-US": {
    title: "Your News",
    content: [
      {
        title:
          "Otter.ai‚Äôs new assistant can automatically transcribe your Zoom meetings",
        synopsis:
          "A.I.-powered voice transcription service Otter.ai wants to make it even easier for its business users to record their meetings. The company is today introducing a new feature, Otter Assistant, whic...",
        imageUrl: "",
      },
      // ...
    ],
  },
  "de-DE": {
    title: "Ihre Nachrichten",
    content: [
      {
        title:
          "Der neue Assistent von Otter.ai kann Ihre Zoom-Meetings automatisch transkribieren",
        synopsis:
          "Der KI-gest√ºtzte Sprachtranskriptionsdienst Otter.ai m√∂chte es seinen Gesch√§ftsanwendern noch einfacher machen, ihre Meetings aufzuzeichnen. Das Unternehmen stellt heute eine neue Funktion vor, Otter Assistant, die ...",
        imageUrl: "",
      },
      // ...
    ],
  },
  "fr-FR": {
    title: "Vos nouvelles",
    content: [
      {
        title:
          "Le nouvel assistant d'Otter.ai peut transcrire automatiquement vos r√©unions Zoom",
        synopsis:
          "Le service de transcription vocale aliment√© par A.I. Otter.ai veut rendre encore plus facile pour ses utilisateurs professionnels l'enregistrement de leurs r√©unions. La soci√©t√© pr√©sente aujourd'hui une nouvelle fonctionnalit√©, Otter Assistant, qui ...",
        imageUrl: "",
      },
      // ...
    ],
  },
  "es-ES": {
    title: "Tus noticias",
    content: [
      {
        title:
          "El nuevo asistente de Otter.ai puede transcribir autom√°ticamente sus reuniones de Zoom",
        synopsis:
          "El servicio de transcripci√≥n de voz con tecnolog√≠a de inteligencia artificial Otter.ai quiere facilitar a√∫n m√°s a sus usuarios comerciales la grabaci√≥n de sus reuniones. La compa√±√≠a presenta hoy una nueva funci√≥n, Otter Assistant, que ...",
        imageUrl: "",
      },
      // ...
    ],
  },
};

export default function Home2() {
  
  const router = useRouter()
  const { locale, locales, defaultLocale, asPath } = router;
  //const {title, content} = locale !== undefined ? newsContent[locale as keyof typeof newsContent] : '';
  // const t = locale === 'en-US' 
  // ? newsContent['en-US'] 
  // : locale === 'es-ES' 
  // ? newsContent['es-ES'] 
  // : locale === 'de-DE' 
  // ? newsContent['de-DE'] 
  // : locale === 'fr-FR' 
  // ? newsContent['fr-FR'] 
  //: ''

  console.log(locale, locales, defaultLocale)

  
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <Head>
        <title>LANGUAGES</title>
        <link rel="icon" href="/favicon.ico" />
      </Head> */}

      <main className={styles.main}>
        <div className={styles.breadcrumb}>
          <div
            style={{
              padding: "4px",
              marginRight: "4px",
            }}
          >
            <span>Current Language: </span>
            <span
              style={{
                borderRadius: "3px",
                backgroundColor: "blue",
                color: "white",
                padding: "2px",
              }}
            >
              {locale}
            </span>
          </div>
          <Link
            className={locale === "de-DE" ? "active" : ""}
            href={asPath}
            locale="de-DE"
          >
            de-DE
          </Link>
          
          <Link
            className={locale === "es-ES" ? "active" : ""}
            href={asPath}
            locale="es-ES"
          >
            es-ES
          </Link>

          <Link
            className={locale === "en-US" ? "active" : ""}
            href={asPath}
            locale="en-US"
          >
            en-US
          </Link>
          <Link
            className={locale === "fr-FR" ? "active" : ""}
            href={asPath}
            locale="fr-FR"
          >
            fr-FR
          </Link>
        </div>

        <div className={styles.newscontainer}>
          <div className={styles.yournewscasts}>
            <h3>{'title'}</h3>
          </div>

          <div>
            {/* {newsContent.content.map((newsItem: any, i: number) => (
              <LanguageForm key={i} news={newsItem} />
            ))} */}
            <LanguageForm />
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{'KFC üíõ '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

// Index.messages = ['Index', ...PageLayout.messages];

// export async function getStaticProps({locale}: GetStaticPropsContext) {
//   return {
//     props: {
//       messages: pick(
//         await import(`../messages/${locale}.json`),
//         Index.messages
//       )
//     }
//   };
// }